!function(t,e){"function"==typeof define&&define.amd?define([],e):"object"==typeof module&&module.exports?module.exports=e():t.erudaOrientation=e()}(this,(function(){return function(t){var e=t.Tool,a=t.util,r=e.extend({name:"orientation",init:function(t){this.callSuper(e,"init",arguments),this._style=a.evalCss([".eruda-dev-tools .eruda-tools .eruda-orientation {padding: 10px; overflow-y: auto; -webkit-overflow-scrolling: touch;}",".eruda-not-supported {background: var(--console-error-background); color: var(--console-error-foreground); border: 1px solid var(--console-error-border);padding: 10px; text-align: center;}",".eruda-cube {width: 150px; height: 150px; color: var(--foreground); position: relative; margin: 50px auto; -webkit-transform-style: preserve-3d; transform-style: preserve-3d;}",".eruda-face {width: 150px; height: 150px; position: absolute; font-size: 80px; text-align: center; line-height: 150px; background-color: var(--accent); box-shadow: inset 0 0 20px var(--foreground); opacity: 0.6; }",".eruda-one {-webkit-transform: translateZ(75px); transform: translateZ(75px);}",".eruda-two {-webkit-transform: rotateY(90deg) translateZ(75px); transform: rotateY(90deg) translateZ(75px);}",".eruda-three {-webkit-transform: rotateY(180deg) translateZ(75px); transform: rotateY(180deg) translateZ(75px);}",".eruda-four {-webkit-transform: rotateY(-90deg) translateZ(75px); transform: rotateY(-90deg) translateZ(75px);}",".eruda-five {-webkit-transform: rotateX(90deg) translateZ(75px); transform: rotateX(90deg) translateZ(75px);}",".eruda-six {-webkit-transform: rotateX(-90deg) translateZ(75px) rotate(0deg); transform: rotateX(-90deg) translateZ(75px) rotate(0deg);}",".eruda-orientation-data {margin: 10px;}",".eruda-content {padding: 10px;}","table {width: 100%;}","table td {border: 1px solid var(--border); padding: 10px;}",".eruda-key {width: 150px;}","sup {vertical-align: super; font-size: smaller;}"].join(".eruda-dev-tools .eruda-tools .eruda-orientation ")),window.DeviceOrientationEvent&&window.DeviceMotionEvent?(t.html(['<div class="eruda-cube" class="cube">','  <div class="eruda-face eruda-one">1</div>','  <div class="eruda-face eruda-two">2</div>','  <div class="eruda-face eruda-three">3</div>','  <div class="eruda-face eruda-four">4</div>','  <div class="eruda-face eruda-five">5</div>','  <div class="eruda-face eruda-six">6</div>',"</div>",'<div class="eruda-orientation-data">','  <div class="eruda-content">',"    <table>","      <tbody>","        <tr>",'          <td class="eruda-key">coordinates</td>','          <td class="eruda-coordinates">unknown</td>',"        </tr>","        <tr>",'          <td class="eruda-key">acceleration</td>','          <td class="eruda-acceleration">unknown</td>',"        </tr>","        <tr>",'          <td class="eruda-key">acceleration including gravity</td>','          <td class="eruda-acceleration-including-gravity">unknown</td>',"        </tr>","        <tr>",'          <td class="eruda-key">rotation rate</td>','          <td class="eruda-rotation-rate">unknown</td>',"        </tr>","        <tr>",'          <td class="eruda-key">interval</td>','          <td class="eruda-interval">unknown</td>',"        </tr>","      </tbody>","    </table>","  </div>","</div>"].join("")),this._$cube=t.find(".eruda-cube"),this._$coordinates=t.find(".eruda-coordinates"),this._$acceleration=t.find(".eruda-acceleration"),this._$accGravity=t.find(".eruda-acceleration-including-gravity"),this._$rotationRate=t.find(".eruda-rotation-rate"),this._$interval=t.find(".eruda-interval"),this._bindEvent()):t.html('<div class="eruda-not-supported">Not supported for this browser!</div>')},_bindEvent:function(){var t=this._$cube,e=this._$coordinates,a=this._$acceleration,r=this._$accGravity,o=this._$rotationRate,n=this._$interval,i=this;this._onDeviceorientation=function(a){i._isShow&&(t.css("transform","rotateX("+a.beta+"deg) rotateY("+a.gamma+"deg) rotateZ("+a.alpha+"deg)"),e.text("("+Math.round(a.beta)+", "+Math.round(a.gamma)+", "+Math.round(a.alpha)+")"))},this._onDevicemotion=function(t){if(i._isShow){var e=t.acceleration;a.html("("+Math.round(e.x)+", "+Math.round(e.y)+", "+Math.round(e.z)+") m/s<sup>2</sup>");var d=t.accelerationIncludingGravity;r.html("("+Math.round(d.x)+", "+Math.round(d.y)+", "+Math.round(d.z)+") m/s<sup>2</sup>");var s=t.rotationRate;o.text("("+Math.round(s.beta)+", "+Math.round(s.gamma)+", "+Math.round(s.alpha)+")"),n.text(t.interval+"ms")}},window.addEventListener("deviceorientation",this._onDeviceorientation),window.addEventListener("devicemotion",this._onDevicemotion)},show:function(){this.callSuper(e,"show",arguments),this._isShow=!0},hide:function(){this.callSuper(e,"hide",arguments),this._isShow=!1},destroy:function(){this.callSuper(e,"destroy",arguments),a.evalCss.remove(this._style),window.removeEventListener("deviceorientation",this._onDeviceorientation),window.removeEventListener("devicemotion",this._onDevicemotion)}});return new r}}));
//# sourceMappingURL=eruda-orientation.js.map
